<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 配置包扫描器 针对springmvc的controller在springmvc配置文件中配置-->
	<context:component-scan base-package="com.hk">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 配置dbcp连接池数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="initialSize" value="${initialSize}" />
	</bean>
	
	<!-- 配置事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 这里采用注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 配置mybatis sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="com.hk.core.HKSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
		<property name="typeAliasesPackage" value="com.hk"></property>
	</bean>
	
	<!-- 配置mybatis mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hk.**.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 日志处理线程池 -->
	<bean id="logTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" destroy-method="destroy">
		<property name="corePoolSize" value="1"/>
		<property name="keepAliveSeconds" value="200"/>
		<property name="maxPoolSize" value="2"/>
		<property name="queueCapacity" value="30"/>
	</bean>
	
	<!-- 操作日志配置 -->
	<bean id="logHandler" class="com.hk.core.logs.LogsHandler"/>
	<aop:config>
		<aop:pointcut id="logPointCut" expression="execution(* com.hk..*ServiceImpl.add*(..)) or
												  execution(* com.hk..*ServiceImpl.save*(..)) or
												  execution(* com.hk..*ServiceImpl.delete*(..)) or
												  execution(* com.hk..*ServiceImpl.update*(..)) or
												  execution(* com.hk..*ServiceImpl.edit*(..))"/>
		<aop:aspect id="logOperationAspect" ref="logHandler" order="2">
			<aop:after-returning method="addLog" pointcut-ref="logPointCut"/>
		</aop:aspect>
	</aop:config>
	<!-- 操作日志配置 end -->
	
	<!-- 错误日志配置 -->
	<bean id="logExceptionHandler" class="com.hk.core.logs.LogsExceptionHandler"/>
	<aop:config>
		<aop:pointcut id="logExceptionPointCut" expression="execution(* com.hk..*ServiceImpl.add*(..)) or
												  execution(* com.hk..*ServiceImpl.save*(..)) or
												  execution(* com.hk..*ServiceImpl.delete*(..)) or
												  execution(* com.hk..*ServiceImpl.update*(..)) or
												  execution(* com.hk..*ServiceImpl.edit*(..))"/>
		<aop:aspect id="logExceptionOperationAspect" ref="logExceptionHandler" order="2">
			<aop:after-throwing method="addLog" pointcut-ref="logExceptionPointCut"/>
		</aop:aspect>
	</aop:config>
	<!-- 错误日志配置 end -->
	
	<bean id="classPool" class="javassist.ClassPool"></bean>
	
</beans>